{"ast":null,"code":"var _jsxFileName = \"/Users/georgewalker/Documents/Coding/Odin Project/Memory-Game/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.css';\nimport Game from './Components/Game';\nimport Beth from './images/Beth_Smith.png';\nimport Jerry from './images/Jerry_Smith.png';\nimport Meeseeks from './images/MeeseeksHQ.png';\nimport Morty from './images/Morty_Smith.jpeg';\nimport MrPoopy from './images/Mr_poopy_butthole.png';\nimport Bird from './images/NewBirdPerson.jpeg';\nimport Pickle from './images/Pickle_rick_transparent_edgetrimmed.png';\nimport Rick from './images/Rick_Sanchez.png';\nimport Scroopy from './images/Scroopy.jpeg';\nimport Snuffles from './images/Snuffles-helmet.jpeg';\nimport Squanchy from './images/Squanchy_.png';\nimport Summer from './images/Summer_is_cool.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [images, setImages] = useState([{\n    id: 1,\n    sortorder: 1,\n    charname: 'Beth Smith',\n    src: Beth\n  }, {\n    id: 2,\n    sortorder: 2,\n    charname: 'Jerry Smith',\n    src: Jerry\n  }, {\n    id: 3,\n    sortorder: 3,\n    charname: 'Mr Meeseeks',\n    src: Meeseeks\n  }, {\n    id: 4,\n    sortorder: 4,\n    charname: 'Morty Smith',\n    src: Morty\n  }, {\n    id: 5,\n    sortorder: 5,\n    charname: 'Mr Poopy Butthole',\n    src: MrPoopy\n  }, {\n    id: 6,\n    sortorder: 6,\n    charname: 'Birdman',\n    src: Bird\n  }, {\n    id: 7,\n    sortorder: 7,\n    charname: 'Pickle Rick',\n    src: Pickle\n  }, {\n    id: 8,\n    sortorder: 8,\n    charname: 'Scroopy',\n    src: Scroopy\n  }, {\n    id: 9,\n    sortorder: 9,\n    charname: 'Snuffles',\n    src: Snuffles\n  }, {\n    id: 10,\n    sortorder: 10,\n    charname: 'Squanchy',\n    src: Squanchy\n  }, {\n    id: 11,\n    sortorder: 11,\n    charname: 'Rick Sanchez',\n    src: Rick\n  }, {\n    id: 12,\n    sortorder: 12,\n    charname: 'Summer Smith',\n    src: Summer\n  }]);\n  const [scores, setScore] = useState({\n    idTracker: [],\n    bestscore: 0,\n    score: 0\n  });\n\n  const incrementScore = id => {\n    // Set Score & Best Score\n    if (scores.idTracker.includes(id) && scores.score > scores.bestscore) {\n      setScore({\n        idTracker: [],\n        bestscore: scores.score,\n        score: 0\n      });\n    } else if (scores.idTracker.includes(id) && scores.score < scores.bestscore) {\n      setScore({\n        idTracker: [],\n        bestscore: scores.bestscore,\n        score: 0\n      });\n    } else {\n      setScore({\n        idTracker: [...scores.idTracker, id],\n        bestscore: scores.bestscore,\n        score: scores.score + 1\n      });\n    } // Rearrange images\n\n\n    const newImages = images => {\n      for (let i = 0; i < images.length; i++) {\n        images[i].sortorder = Math.floor(Math.random() * 10000 + 1);\n      }\n\n      return images.sort((a, b) => a.sortorder > b.sortorder ? 1 : b.sortorder > a.sortorder ? -1 : 0);\n    };\n\n    setImages(newImages(images));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Game, {\n      images: images,\n      scores: scores,\n      onInc: incrementScore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rbBtBeUM8rEWkLlAaa2SdE6uNxc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/georgewalker/Documents/Coding/Odin Project/Memory-Game/src/App.js"],"names":["useState","Game","Beth","Jerry","Meeseeks","Morty","MrPoopy","Bird","Pickle","Rick","Scroopy","Snuffles","Squanchy","Summer","App","images","setImages","id","sortorder","charname","src","scores","setScore","idTracker","bestscore","score","incrementScore","includes","newImages","i","length","Math","floor","random","sort","a","b"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport './App.css';\nimport Game from './Components/Game'\nimport Beth from './images/Beth_Smith.png'\nimport Jerry from './images/Jerry_Smith.png'\nimport Meeseeks from './images/MeeseeksHQ.png'\nimport Morty from './images/Morty_Smith.jpeg'\nimport MrPoopy from './images/Mr_poopy_butthole.png'\nimport Bird from './images/NewBirdPerson.jpeg'\nimport Pickle from './images/Pickle_rick_transparent_edgetrimmed.png'\nimport Rick from './images/Rick_Sanchez.png'\nimport Scroopy from './images/Scroopy.jpeg'\nimport Snuffles from './images/Snuffles-helmet.jpeg'\nimport Squanchy from './images/Squanchy_.png'\nimport Summer from './images/Summer_is_cool.jpeg'\n\nfunction App() {\n  const [images, setImages] = useState([{\n    id: 1,\n    sortorder: 1,\n    charname: 'Beth Smith',\n    src: Beth\n}, {\n  id: 2,\n  sortorder: 2,\n  charname: 'Jerry Smith',\n  src: Jerry\n}, {\n  id: 3,\n  sortorder: 3,\n  charname: 'Mr Meeseeks',\n  src: Meeseeks\n},{\n  id: 4,\n  sortorder: 4,\n  charname: 'Morty Smith',\n  src: Morty\n},{\n  id: 5,\n  sortorder: 5,\n  charname: 'Mr Poopy Butthole',\n  src: MrPoopy\n},{\n  id: 6,\n  sortorder: 6,\n  charname: 'Birdman',\n  src: Bird\n},{\n  id: 7,\n  sortorder: 7,\n  charname: 'Pickle Rick',\n  src: Pickle\n},{\n  id: 8,\n  sortorder: 8,\n  charname: 'Scroopy',\n  src: Scroopy\n},{\n  id: 9,\n  sortorder: 9,\n  charname: 'Snuffles',\n  src: Snuffles\n},{\n  id: 10,\n  sortorder: 10,\n  charname: 'Squanchy',\n  src: Squanchy\n},{\n  id: 11,\n  sortorder: 11,\n  charname: 'Rick Sanchez',\n  src: Rick\n},{\n  id: 12,\n  sortorder: 12,\n  charname: 'Summer Smith',\n  src: Summer\n}]);\n\nconst [scores, setScore] = useState({\n  idTracker: [],\n  bestscore: 0,\n  score: 0\n})\n\nconst incrementScore = (id) => {\n  // Set Score & Best Score\n  if (scores.idTracker.includes(id) && scores.score > scores.bestscore) {\n    setScore({\n      idTracker: [],\n      bestscore: scores.score,\n      score: 0\n    })\n  } else if (scores.idTracker.includes(id) && scores.score < scores.bestscore) {\n    setScore({\n      idTracker: [],\n      bestscore: scores.bestscore,\n      score: 0\n    })\n  } else {\n    setScore(\n      {\n        idTracker:[...scores.idTracker,id],\n        bestscore: scores.bestscore,\n        score: scores.score + 1})\n  }\n\n  // Rearrange images\n  const newImages = (images) => {\n    for (let i=0; i < images.length; i++) {\n      images[i].sortorder = Math.floor(Math.random() * 10000 + 1)\n    }\n    return images.sort((a,b) => (a.sortorder > b.sortorder) ? 1 : ((b.sortorder > a.sortorder) ? -1 : 0))\n  }\n  setImages(newImages(images))\n}\n\n  return (\n    <div className=\"App\">\n      <Game images={images} scores={scores} onInc={incrementScore}/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}